apiVersion: v1
kind: Pod
metadata:
  labels:
    app: test-kata-qemu-security-1
  name: test-kata-qemu-security-1
  annotations:
    io.containerd.cri.runtime-handler: kata-qemu-security
spec:
  restartPolicy: Always
  runtimeClassName: kata-qemu-security
  volumes:
  - name: jfs-share
    emptyDir:
      medium: Memory
      sizeLimit: 10Mi
  - name: block-volume-ceph
    persistentVolumeClaim:
      claimName: cfs-security-kbs-pvc
  - name: tls-cfg
    secret:
      secretName: kbs-tls-secret
      items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
  containers:
  - name: device-sidecar-1
    #image: hub.confidentialfilesystems.com:4443/cc/juicedata-juicefs-sidecar:v1.1.2-filesystem-1
    #image: hub.confidentialfilesystems.com:4443/cc/coco-trustee:v0.8.0-filesystem-1
    image: hub.confidentialfilesystems.com:4443/cc/cfs-fuse:v0.0.1-d1
    env:
      - name: DEVICE_PASSWORD
        value: xprvA6SLQMF34gS6tpmrzBYXcD27JtcyQi7MRidJwMK8CMbSSEY7TEYHEtUbxshncghGpofmm2i7RTw3Zx14TUGTm5E4NwyNBpKzSkHCRqpB992
    lifecycle:
      preStop:
        exec:
          command:
          - sh
          - -c
          - close_block_device.sh cfs-ceph /jfs/share/cfs
    command:
    - sh
    - -c
    - |-
      open_block_device.sh /dev/block-ceph cfs-ceph /jfs/share/cfs
      while true; do sleep 60; done
    resources:
      limits:
        cpu: '2'
        memory: 8Gi
      requests:
        cpu: '2'
        memory: 8Gi
    securityContext:
      privileged: true
    volumeDevices:
      - name: block-volume-ceph
        devicePath: /dev/block-ceph
    volumeMounts:
      - name: jfs-share
        mountPath: /jfs/share
        mountPropagation: Bidirectional
  - name: cfs-security-1
    image: hub.confidentialfilesystems.com:4443/cc/coco-trustee:v0.8.0-filesystem-1
    imagePullPolicy: Always
    volumeMounts:
      - name: jfs-share
        mountPath: /opt/confidential-containers/kbs # use in /opt/confidential-containers/kbs/repository
      - name: tls-cfg
        mountPath: /etc/cc/kbs
        readOnly: true
    securityContext:
      privileged: true
  - name: ownership-db-1
    #image: hub.confidentialfilesystems.com:4443/cc/postgres:12.19-alpine
    image: hub.confidentialfilesystems.com:4443/cc/postgres:12-alpine
    imagePullPolicy: Always
    env:
      - name: POSTGRES_DB
        value: postgres
      - name: POSTGRES_USER
        value: postgres
      - name: POSTGRES_PASSWORD
        value: "123456"
      - name: PGDATA
        value: /var/lib/postgresql/data
    ports:
      - containerPort: 5432
    volumeMounts:
      - name: jfs-share
        mountPath: /var/lib/postgresql
---
apiVersion: v1
kind: Service
metadata:
  name: test-kata-qemu-security-1-svc
spec:
  type: NodePort
  ports:
    - name: https-rest
      port: 11111
      nodePort: 31111
      targetPort: 11111
  selector:
    app: test-kata-qemu-security-1
---
apiVersion: v1
kind: Secret
metadata:
  name: kbs-tls-secret
type: kubernetes.io/tls
data:
  tls.crt: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZCekNDQSsrZ0F3SUJBZ0lTQStEVWhRZWhldWVUZ1REdTNuMm9VTFYvTUEwR0NTcUdTSWIzRFFFQkN3VUEKTURJeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkZibU55ZVhCME1Rc3dDUVlEVlFRRApFd0pTTXpBZUZ3MHlOREExTWpRd01UTTBNVGRhRncweU5EQTRNakl3TVRNME1UWmFNQ2d4SmpBa0JnTlZCQU1NCkhTb3VZMjl1Wm1sa1pXNTBhV0ZzWm1sc1pYTjVjM1JsYlhNdVkyOXRNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUYKQUFPQ0FROEFNSUlCQ2dLQ0FRRUFuY3NUZjdrYXdYaWZQTFFGRElUallHd0IwZkNENFVmR3NmbDd1ejNZNkpjZwp1YjkzbWRyY2FWa2I2dG9OSVFNL1lFb2l1RXV0dDZva0h4ZmdpN0tyTnhhSzBmYlZxczA0NXduQUFiQitRSWtoCndMWjF1d01qN2d6QVBzTVQzeEpESXBURmZmanFaQVdpbWdnQktnU1pNRWpNcGhOMjNXK25YSS9DdUs0WVQ2MkEKb3o3K1Q5djRaeUhSZTlaRGE1cCtPQWZROCtOdmUwQy9tOGluYzVMYnc1MXZqQUIzNVMrT2w2WEZxbGlONVFRSgpvTDBvWTBPbVlMZDR5dkZ6Qi9MdTJIWTkwNThFdndJK1ZsRm1hRmdhdUdrKzd1dThBUXNyalBrY05pYWtwQW5WCnUvRkIvejY0MFBXa2ZYVEJIM1dQRXVOVTNnYzRBeVdwWGxVbzZXWkxmUUlEQVFBQm80SUNIekNDQWhzd0RnWUQKVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVgpIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVdCQlRBeTdkTjJib2JqUkkwa2ZKZzY0dnhNSkVxb2pBZkJnTlZIU01FCkdEQVdnQlFVTHJNWHQxaFd5NjVRQ1VEbUg2K2RpeFRDeGpCVkJnZ3JCZ0VGQlFjQkFRUkpNRWN3SVFZSUt3WUIKQlFVSE1BR0dGV2gwZEhBNkx5OXlNeTV2TG14bGJtTnlMbTl5WnpBaUJnZ3JCZ0VGQlFjd0FvWVdhSFIwY0RvdgpMM0l6TG1rdWJHVnVZM0l1YjNKbkx6QW9CZ05WSFJFRUlUQWZnaDBxTG1OdmJtWnBaR1Z1ZEdsaGJHWnBiR1Z6CmVYTjBaVzF6TG1OdmJUQVRCZ05WSFNBRUREQUtNQWdHQm1lQkRBRUNBVENDQVFRR0Npc0dBUVFCMW5rQ0JBSUUKZ2ZVRWdmSUE4QUIzQUQ4WFMwL1hJa2RZbEIxbEhJUytEUkx0a0RkL0g0VnE2OEcvS0lYcytHUnVBQUFCajZoeQo5d1FBQUFRREFFZ3dSZ0loQU1OMjVCM2RiZVRkNnduUUE3UW1DZko3VjRiU25pYmpCa2NZa0VTYnNBSTVBaUVBCms5OGtGdGdhS1Jtd1hkUHVDaXl1TlpoTVRNbEtEWVNKYkJ1OUI1dG9SVTRBZFFBWm1CQnhDZkRXVWk0d2dOS2UKUDJTN2cyNG96UGtQVW83dTM4NUtQeGEweWdBQUFZK29jdmNhQUFBRUF3QkdNRVFDSUd4Qm9QV1laWHRvTGVXVwp0VFNFYTRhZU9zM0FZNXlUN3dPOEpVdmZpbTF4QWlBS1paQUFtSmNzZWVRR2VoanZITlBQbFdsNWE4V0dySVdWCnNzaE5rbWdZRGpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUlCNVJhMXRRRGlKM0ZrVlVDQmJkRldRM3poVnYKUGJLRytwaGEycUJscmh4bVhEWWhZRThNdFZucUdlZUFvWE1wVndUbFl5TFNNOU5FUlVCUHFyZ292UGI5bUkwQwp1WklEWGt5UE41VWt2TkEwa2pjY2xXZzRScVEvTnBYclJ5Q3liZDBlTHQvcDdvcktxOEZrVVRJR3dONDJtbWF4CnU5VkNNcDlsWkJWYjI3bFBxU2dRYnlYSlBFa0k4YXlpU0NUS1BvcWVEbmRUdHNLUUtSa1RoclE1eEdXNWFzbnQKaDJLd1RCNkJjanBZQ0tTZFZ1b0FXRHVpcXRLUE1lUWVUa2QvTnplc2dEU05oUEt6dmsvbmFyZk56YTRxUXdtcgpYeFB1SllnWWE4TDIzcHBoL3lYYVZxODNTT2tRQ3JBbWZMUlJ5S3JPaW1yejBWd0xrTDJIQTZqaGFRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRkZqQ0NBdjZnQXdJQkFnSVJBSkVyQ0VyUERCaW5VL2JXTGlXblgxb3dEUVlKS29aSWh2Y05BUUVMQlFBdwpUekVMTUFrR0ExVUVCaE1DVlZNeEtUQW5CZ05WQkFvVElFbHVkR1Z5Ym1WMElGTmxZM1Z5YVhSNUlGSmxjMlZoCmNtTm9JRWR5YjNWd01SVXdFd1lEVlFRREV3eEpVMUpISUZKdmIzUWdXREV3SGhjTk1qQXdPVEEwTURBd01EQXcKV2hjTk1qVXdPVEUxTVRZd01EQXdXakF5TVFzd0NRWURWUVFHRXdKVlV6RVdNQlFHQTFVRUNoTU5UR1YwSjNNZwpSVzVqY25sd2RERUxNQWtHQTFVRUF4TUNVak13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUM3QWhVb3pQYWdsTk1QRXV5TlZaTEQrSUx4bWFaNlFvaW5YU2FxdFN1NXhVeXhyNDVyK1hYSW85Y1AKUjVRVVZUVlhqSjZvb2prWjlZSThRcWxPYnZVN3d5N2JqY0N3WFBOWk9PZnR6Mm53V2dzYnZzQ1VKQ1dIK2pkeApzeFBuSEt6aG0rL2I1RHRGVWtXV3FjRlR6alRJVXU2MXJ1MlAzbUJ3NHFWVXE3WnREcGVsUURScks5TzhadXRtCk5IejZhNHVQVnltWitEQVhYYnB5Yi91QnhhM1NobGc5RjhmbkNidnhLL2VHM01IYWNWM1VSdVBNclNYQmlMeGcKWjNWbXMvRVk5NkpjNWxQL09vaTJSNlgvRXhqcW1BbDNQNTFUK2M4QjVmV21jQmNVcjJPay81bXprNTNjVTZjRwova2lGSGFGcHJpVjF1eFBNVWdQMTdWR2hpOXNWQWdNQkFBR2pnZ0VJTUlJQkJEQU9CZ05WSFE4QkFmOEVCQU1DCkFZWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUJJR0ExVWRFd0VCL3dRSU1BWUIKQWY4Q0FRQXdIUVlEVlIwT0JCWUVGQlF1c3hlM1dGYkxybEFKUU9ZZnI1MkxGTUxHTUI4R0ExVWRJd1FZTUJhQQpGSG0wV2VaN3R1WGtBWE9BQ0lqSUdsajI2WnR1TURJR0NDc0dBUVVGQndFQkJDWXdKREFpQmdnckJnRUZCUWN3CkFvWVdhSFIwY0RvdkwzZ3hMbWt1YkdWdVkzSXViM0puTHpBbkJnTlZIUjhFSURBZU1CeWdHcUFZaGhab2RIUncKT2k4dmVERXVZeTVzWlc1amNpNXZjbWN2TUNJR0ExVWRJQVFiTUJrd0NBWUdaNEVNQVFJQk1BMEdDeXNHQVFRQgpndDhUQVFFQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQ0Z5azVIUHFQM2hVU0Z2TlZuZUxLWVk2MTFUUjZXClBUTmxjbFF0Z2FEcXcrMzRJTDlmekxkd0FMZHVPL1plbE43a0lKK203NHV5QStlaXRSWThrYzYwN1RrQzUzd2wKaWtmbVpXNC9SdlRaOE02VUsrNVV6aEs4akNkTHVNR1lMNkt2elhHUlNnaTN5TGdqZXdRdENQa0lWejZEMlFRegpDa2NoZUFtQ0o4TXF5SnU1emx6eVpNakF2bm5BVDQ1dFJBeGVrcnN1OTRzUTRlZ2RSQ25iV1NEdFk3a2grQkltCmxKTlhvQjFsQk1FS0lxNFFEVU9Yb1JnZmZ1RGdoamUxV3JHOU1MK0hiaXNxL3lGT0d3WEQ5UmlYOEY2c3c2VzQKYXZBdXZEc3p1ZTVMM3N6ODVLK0VDNFkvd0ZWRE52Wm80VFlYYW82WjBmK2xRS2MwdDhEUVl6azFPWFZ1OHJwMgp5Sk1DNmFsTGJCZk9EQUxadllIN243ZG8xQVpsczRJOWQxUDRqbmtEclFveEIzVXFROWhWbDNMRUtRNzN4RjFPCnlLNUdoRERYOG9WZkdLRjV1K2RlY0lzSDRZYVR3N21QM0dGeEpTcXYzKzBsVUZKb2k1TGM1ZGExNDlwOTBJZHMKaENFeHJvTDErN21yeUlrWFBlRk01VGdPOXIwcnZaYUJGT3ZWMnowZ3AzNVowK0w0V1BsYnVFak4vbHhQRmluKwpIbFVqcjhnUnNJM3FmSk9RRnkvOXJLSUpSMFkvOE9td3QvOG9UV2d5MW1kZUhtbWprN2oxbllzdkM5SlNRNlp2Ck1sZGxUVEtCM3poVGhWMStYV1lwNnJqZDVKVzF6YlZXRWtMTnhFN0dKVGhFVUczc3pnQlZHUDdwU1dUVVRzcVgKbkxSYndIT29xN2hId2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: >-
    LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQ2R5eE4vdVJyQmVKODgKdEFVTWhPTmdiQUhSOElQaFI4YXgrWHU3UGRqb2x5QzV2M2VaMnR4cFdSdnEyZzBoQXo5Z1NpSzRTNjIzcWlRZgpGK0NMc3FzM0ZvclI5dFdxelRqbkNjQUJzSDVBaVNIQXRuVzdBeVB1RE1BK3d4UGZFa01pbE1WOStPcGtCYUthCkNBRXFCSmt3U015bUUzYmRiNmRjajhLNHJoaFByWUNqUHY1UDIvaG5JZEY3MWtOcm1uNDRCOUR6NDI5N1FMK2IKeUtkemt0dkRuVytNQUhmbEw0NlhwY1dxV0kzbEJBbWd2U2hqUTZaZ3Qzaks4WE1IOHU3WWRqM1Rud1MvQWo1VwpVV1pvV0JxNGFUN3U2N3dCQ3l1TStSdzJKcVNrQ2RXNzhVSC9QcmpROWFSOWRNRWZkWThTNDFUZUJ6Z0RKYWxlClZTanBaa3Q5QWdNQkFBRUNnZ0VBQzdlUk5wcEZzTmttcGVqT09TeERBQjExRXlSVGZxNklSQjM5QUozcWxmYm0KOExRVml3Q3ova1NtTEkzTmpNYURkY0I3aklqZUdQWFM0ZFl4ajk0UUZiS2dVMUFMZExmeGdrSjRsZ2VIa0g0KwpXZU9Tb1hUdHZaY0h6WUZKMy9Zb3N4QXVEQmtvT280cWtWcUh6NWx3MEtPUFFzUE9QMG96dU0xYURjR3J2M3JLCldtY0w4cUt4dHhJTnVtWEk4dXdFMExiRjhuclMrRzlFWVZKRThxNzJCNk13cTBrK0dRQ01SQnMrMnZweFMrRkkKRVpTTmxNZmx4Vng5N1NKUEZuU01MMFczeEdJS2Y5WGdzdXpuM2ptbm9YV0xwZXdPeTgzbHlVWExnQ25PSUZMeQp3dFppRU5DMWVkTHIyeVpRdHJyQUo2dUt6Zk0zcllHWTdaLzhYMldQUndLQmdRQzhxRXEzRTBsVnJZWFM4bGpPCjNDM3dkSGRvcGw2cjBvSWR2a2NzYzN3d0JwN3JBRE95Y1RJNUpCSjFIWk5ZazJnUFFwRHpqY3pKaHFnVVVoRDAKcFJYREtUYTJPNzlRQ0xFaHdXcjRhQm9Nb2kyQzl1U01ySFViaUxieG9EeXJITWlzNElVOU9DbUhOVW9SUDBnbAorUnA0Uys1ZlBZNzhkOGJjU0haNWozcmYyd0tCZ1FEV0htTjkvUVRmejdCcVdrYmNJTEYwQnk2OUZvaFlFYnNYCldsUVlTbGc3TDRkdVpwejF1eTZpN2duSU5xUWJCcDRPL3dFeGxNTUlCc2xWbXRJZStWVUYwWnFqZnFJK1luOTcKRWR0UWo5TkdmODBuWTVmdzdDRXlZbjdIV1czUUViU3N1TDk3R2VUcDdzTzJFRGNVMzlkZmowcDRNUlFSRzJuVApRVGgwYWY1dGh3S0JnRjM5am5QVmhRVE5sYzI1OWVyaG9YV1o0Ti9mZTIwcFRMQWEyNFRXNkhsWTR4WDduTVg3ClJXVllobVdZM1k4VXFaUm91cVRNOGNrNWNFWG5lUkVacWxUNEZJMElDVkdMY3d4NU81MFU2RjJBOHlHN2RiUnMKTzFBRGRmbTl0bHdkMUJEbEx4eUgvWkNpU1F0OHRxcE1pQmFFNWZiSFNaU1k3QmRWZHNrclpiRmZBb0dBYm1JNApOR2xPSy91c0hRZnhZK1pPMVZ3bWtrQ2RoWm1PZEJtVEpQcWV4ZFJZNDJkdkg1ZWlFVWphTGlkTkxzbVlqbTZVCk5QVldIanN4YkRwbWZLVlpXYWlYS2haTW1oQzVXNzcyNjI5YUlnd2N2V093bnZsOG03Yi9XTklYdEo2TUlFY1cKSCtaWGh1b2FaeSt3MWNnWUJpR2U2SnVVbHNVbEowMkdSeTJsaHQwQ2dZRUFxRFo4KzM2VTkrSk5KZUk2QWZNYgo2MkhoZTUrdkhTbm8wdjNmNDVENDlhdlNCTEs3UnBjVHNhaTJrZU11dFBjcG9jUndIcVU2cERDQXBJY1pYN1h0CnpiKzZVYnR2VzVHTnVVb1oxWWlVL0JiVG1KZjZJbFNBc0h2ZVJTTWZvQWRTekNic2ZHQW9wbU9paGJVMjN6UU8KbWlxNER4OUxlK2hiT1N1N3VRTlhMbG89Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
